// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'app_localization.dart';

// **************************************************************************
// CustomLocalizationGenerator
// **************************************************************************

class R {
  static EnUs get string => _getDefaultLocal();

  static String _appLocale;

  static Map<String, EnUs> _supportedLocales = {
    "en_us": EnUs(),
    "iw": Iw(),
  };

  static EnUs _getDefaultLocal() {
    //return default strings if locale is not set

    if (_appLocale == null) return EnUs();

    //throw exception to notify given local is not found or not generated by the generator

    if (!_supportedLocales.containsKey(_appLocale))
      throw Exception(
          "$_appLocale is not found.\n Make sure you have added this locale in JSON file\n Try running flutter pub run build_runner");

    //return locale from map

    return _supportedLocales[_appLocale];
  }

  static void changeLocale(String newLocale) {
    _appLocale = newLocale;
  }
}

class EnUs {
  Lbl lbl = Lbl();
  static String get languageCode => "en";
  static String get scriptCode => "us";
  static String get languageName => "en_us";
}

class Lbl {
  String appName = "Test Localization";
  String userName = "UserName";
}

class Iw extends EnUs {
  @override
  get lbl => IwLbl();
  static String get languageCode => "iw";
  static String get languageName => "iw";
}

class IwLbl extends Lbl {
  @override
  get userName => "יציאה";
}
